# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2

references:
  workspace_root: &workspace_root ~/repo

  attach_workspace: &attach_workspace
    attach_workspace:
      at: *workspace_root

jobs:
  build_and_test:
    working_directory: *workspace_root

    environment:
      CC_TEST_REPORTER_ID: edd68154ec5ea9704ffaa99a24f72eb55ad236b4a55e0812960274ff26d11d44

    docker:
      - image: circleci/node:8.10

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - npm-dependencies-{{ checksum "package-lock.json" }}
            # fallback to using the latest cache if no exact match is found
            - npm-dependencies-

      - run: npm install

      - run:
          name: Install Code Climate Test Reporter
          command: |
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter
      - run:
          name: Run Tests
          command: |
            ./cc-test-reporter before-build
            npm run test
            ./cc-test-reporter after-build --exit-code $?
      - run:
          name: Run build
          command: npm run build

      - save_cache:
          name: Save npm packages to cache
          key: npm-dependencies-{{ checksum "package-lock.json" }}
          paths:
            - ./node_modules

      - persist_to_workspace:
          root: *workspace_root
          paths: .

  deploy:
    working_directory: *workspace_root
    docker:
      - image: circleci/node:8.10

    steps:
      - *attach_workspace

      - run:
          name: Authenticate with registry
          command: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > ~/repo/.npmrc

      - run:
          name: Publish package
          command: npm publish

workflows:
  version: 2
  build_test_and_deploy:
    jobs:
      - build_and_test:
          filters:
            tags:
              only: /^v.*/
      - deploy:
          requires:
            - build_and_test
          filters:
            branches:
              ignore: /.*/
            tags:
only: /^v.*/